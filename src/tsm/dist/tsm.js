var tsm=function(t){var e={};function s(i){if(e[i])return e[i].exports;var u=e[i]={i:i,l:!1,exports:{}};return t[i].call(u.exports,u,u.exports,s),u.l=!0,u.exports}return s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var u in t)s.d(i,u,function(e){return t[e]}.bind(null,u));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=7)}([function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.epsilon=1e-6},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(3),u=s(0),a=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(3),t&&(this.xyz=t)}return Object.defineProperty(t.prototype,"x",{get:function(){return this.values[0]},set:function(t){this.values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this.values[1]},set:function(t){this.values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this.values[2]},set:function(t){this.values[2]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xy",{get:function(){return[this.values[0],this.values[1]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xyz",{get:function(){return[this.values[0],this.values[1],this.values[2]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2]},enumerable:!0,configurable:!0}),t.prototype.at=function(t){return this.values[t]},t.prototype.reset=function(){this.x=0,this.y=0,this.z=0},t.prototype.copy=function(e){return void 0===e&&(e=null),e||(e=new t),e.x=this.x,e.y=this.y,e.z=this.z,e},t.prototype.negate=function(t){return void 0===t&&(t=null),t||(t=this),t.x=-this.x,t.y=-this.y,t.z=-this.z,t},t.prototype.equals=function(t,e){return void 0===e&&(e=u.epsilon),!(Math.abs(this.x-t.x)>e)&&(!(Math.abs(this.y-t.y)>e)&&!(Math.abs(this.z-t.z)>e))},t.prototype.length=function(){return Math.sqrt(this.squaredLength())},t.prototype.squaredLength=function(){var t=this.x,e=this.y,s=this.z;return t*t+e*e+s*s},t.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},t.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},t.prototype.multiply=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this},t.prototype.divide=function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},t.prototype.scale=function(t,e){return void 0===e&&(e=null),e||(e=this),e.x*=t,e.y*=t,e.z*=t,e},t.prototype.normalize=function(t){void 0===t&&(t=null),t||(t=this);var e=this.length();return 1===e?this:0===e?(t.x=0,t.y=0,t.z=0,t):(e=1/e,t.x*=e,t.y*=e,t.z*=e,t)},t.prototype.multiplyByMat3=function(t,e){return void 0===e&&(e=null),e||(e=this),t.multiplyVec3(this,e)},t.prototype.multiplyByQuat=function(t,e){return void 0===e&&(e=null),e||(e=this),t.multiplyVec3(this,e)},t.cross=function(e,s,i){void 0===i&&(i=null),i||(i=new t);var u=e.x,a=e.y,n=e.z,r=s.x,l=s.y,h=s.z;return i.x=a*h-n*l,i.y=n*r-u*h,i.z=u*l-a*r,i},t.dot=function(t,e){var s=t.x,i=t.y,u=t.z;return s*e.x+i*e.y+u*e.z},t.distance=function(t,e){e.x,t.x,e.y,t.y,e.z,t.z;return Math.sqrt(this.squaredDistance(t,e))},t.squaredDistance=function(t,e){var s=e.x-t.x,i=e.y-t.y,u=e.z-t.z;return s*s+i*i+u*u},t.direction=function(e,s,i){void 0===i&&(i=null),i||(i=new t);var u=e.x-s.x,a=e.y-s.y,n=e.z-s.z,r=Math.sqrt(u*u+a*a+n*n);return 0===r?(i.x=0,i.y=0,i.z=0,i):(r=1/r,i.x=u*r,i.y=a*r,i.z=n*r,i)},t.mix=function(e,s,i,u){return void 0===u&&(u=null),u||(u=new t),u.x=e.x+i*(s.x-e.x),u.y=e.y+i*(s.y-e.y),u.z=e.z+i*(s.z-e.z),u},t.sum=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x+s.x,i.y=e.y+s.y,i.z=e.z+s.z,i},t.difference=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x-s.x,i.y=e.y-s.y,i.z=e.z-s.z,i},t.product=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x*s.x,i.y=e.y*s.y,i.z=e.z*s.z,i},t.quotient=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x/s.x,i.y=e.y/s.y,i.z=e.z/s.z,i},t.prototype.toQuat=function(e){void 0===e&&(e=null),e||(e=new i.default);var s=new t,u=new t;return s.x=Math.cos(.5*this.x),u.x=Math.sin(.5*this.x),s.y=Math.cos(.5*this.y),u.y=Math.sin(.5*this.y),s.z=Math.cos(.5*this.z),u.z=Math.sin(.5*this.z),e.x=u.x*s.y*s.z-s.x*u.y*u.z,e.y=s.x*u.y*s.z+u.x*s.y*u.z,e.z=s.x*s.y*u.z-u.x*u.y*s.z,e.w=s.x*s.y*s.z+u.x*u.y*u.z,e},t.zero=new t([0,0,0]),t.up=new t([0,1,0]),t.right=new t([1,0,0]),t.forward=new t([0,0,1]),t}();e.default=a},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(1),u=s(0),a=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(2),t&&(this.xy=t)}return Object.defineProperty(t.prototype,"x",{get:function(){return this.values[0]},set:function(t){this.values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this.values[1]},set:function(t){this.values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xy",{get:function(){return[this.values[0],this.values[1]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1]},enumerable:!0,configurable:!0}),t.prototype.at=function(t){return this.values[t]},t.prototype.reset=function(){this.x=0,this.y=0},t.prototype.copy=function(e){return void 0===e&&(e=null),e||(e=new t),e.x=this.x,e.y=this.y,e},t.prototype.negate=function(t){return void 0===t&&(t=null),t||(t=this),t.x=-this.x,t.y=-this.y,t},t.prototype.equals=function(t,e){return void 0===e&&(e=u.epsilon),!(Math.abs(this.x-t.x)>e)&&!(Math.abs(this.y-t.y)>e)},t.prototype.length=function(){return Math.sqrt(this.squaredLength())},t.prototype.squaredLength=function(){var t=this.x,e=this.y;return t*t+e*e},t.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this},t.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this},t.prototype.multiply=function(t){return this.x*=t.x,this.y*=t.y,this},t.prototype.divide=function(t){return this.x/=t.x,this.y/=t.y,this},t.prototype.scale=function(t,e){return void 0===e&&(e=null),e||(e=this),e.x*=t,e.y*=t,e},t.prototype.normalize=function(t){void 0===t&&(t=null),t||(t=this);var e=this.length();return 1===e?this:0===e?(t.x=0,t.y=0,t):(e=1/e,t.x*=e,t.y*=e,t)},t.prototype.multiplyMat2=function(t,e){return void 0===e&&(e=null),e||(e=this),t.multiplyVec2(this,e)},t.prototype.multiplyMat3=function(t,e){return void 0===e&&(e=null),e||(e=this),t.multiplyVec2(this,e)},t.cross=function(t,e,s){void 0===s&&(s=null),s||(s=new i.default);var u=t.x,a=t.y,n=e.x,r=u*e.y-a*n;return s.x=0,s.y=0,s.z=r,s},t.dot=function(t,e){return t.x*e.x+t.y*e.y},t.distance=function(t,e){return Math.sqrt(this.squaredDistance(t,e))},t.squaredDistance=function(t,e){var s=e.x-t.x,i=e.y-t.y;return s*s+i*i},t.direction=function(e,s,i){void 0===i&&(i=null),i||(i=new t);var u=e.x-s.x,a=e.y-s.y,n=Math.sqrt(u*u+a*a);return 0===n?(i.x=0,i.y=0,i):(n=1/n,i.x=u*n,i.y=a*n,i)},t.mix=function(e,s,i,u){void 0===u&&(u=null),u||(u=new t);var a=e.x,n=e.y,r=s.x,l=s.y;return u.x=a+i*(r-a),u.y=n+i*(l-n),u},t.sum=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x+s.x,i.y=e.y+s.y,i},t.difference=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x-s.x,i.y=e.y-s.y,i},t.product=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x*s.x,i.y=e.y*s.y,i},t.quotient=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x/s.x,i.y=e.y/s.y,i},t.zero=new t([0,0]),t}();e.default=a},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(1),u=s(4),a=s(5),n=s(0),r=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(4),t&&(this.xyzw=t)}return Object.defineProperty(t.prototype,"x",{get:function(){return this.values[0]},set:function(t){this.values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this.values[1]},set:function(t){this.values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this.values[2]},set:function(t){this.values[2]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"w",{get:function(){return this.values[3]},set:function(t){this.values[3]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xy",{get:function(){return[this.values[0],this.values[1]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xyz",{get:function(){return[this.values[0],this.values[1],this.values[2]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xyzw",{get:function(){return[this.values[0],this.values[1],this.values[2],this.values[3]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2],this.values[3]=t[3]},enumerable:!0,configurable:!0}),t.prototype.at=function(t){return this.values[t]},t.prototype.reset=function(){for(var t=0;t<4;t++)this.values[t]=0},t.prototype.copy=function(e){void 0===e&&(e=null),e||(e=new t);for(var s=0;s<4;s++)e.values[s]=this.values[s];return e},t.prototype.roll=function(){var t=this.x,e=this.y,s=this.z,i=this.w;return Math.atan2(2*(t*e+i*s),i*i+t*t-e*e-s*s)},t.prototype.pitch=function(){var t=this.x,e=this.y,s=this.z,i=this.w;return Math.atan2(2*(e*s+i*t),i*i-t*t-e*e+s*s)},t.prototype.yaw=function(){return Math.asin(2*(this.x*this.z-this.w*this.y))},t.prototype.equals=function(t,e){void 0===e&&(e=n.epsilon);for(var s=0;s<4;s++)if(Math.abs(this.values[s]-t.at(s))>e)return!1;return!0},t.prototype.setIdentity=function(){return this.x=0,this.y=0,this.z=0,this.w=1,this},t.prototype.calculateW=function(){var t=this.x,e=this.y,s=this.z;return this.w=-Math.sqrt(Math.abs(1-t*t-e*e-s*s)),this},t.dot=function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w},t.prototype.inverse=function(){var e=t.dot(this,this);if(!e)return this.xyzw=[0,0,0,0],this;var s=e?1/e:0;return this.x*=-s,this.y*=-s,this.z*=-s,this.w*=s,this},t.prototype.conjugate=function(){return this.values[0]*=-1,this.values[1]*=-1,this.values[2]*=-1,this},t.prototype.length=function(){var t=this.x,e=this.y,s=this.z,i=this.w;return Math.sqrt(t*t+e*e+s*s+i*i)},t.prototype.normalize=function(t){void 0===t&&(t=null),t||(t=this);var e=this.x,s=this.y,i=this.z,u=this.w,a=Math.sqrt(e*e+s*s+i*i+u*u);return a?(a=1/a,t.x=e*a,t.y=s*a,t.z=i*a,t.w=u*a,t):(t.x=0,t.y=0,t.z=0,t.w=0,t)},t.prototype.add=function(t){for(var e=0;e<4;e++)this.values[e]+=t.at(e);return this},t.prototype.multiply=function(t){var e=this.values[0],s=this.values[1],i=this.values[2],u=this.values[3],a=t.x,n=t.y,r=t.z,l=t.w;return this.x=e*l+u*a+s*r-i*n,this.y=s*l+u*n+i*a-e*r,this.z=i*l+u*r+e*n-s*a,this.w=u*l-e*a-s*n-i*r,this},t.prototype.multiplyVec3=function(t,e){void 0===e&&(e=null),e||(e=new i.default);var s=t.x,u=t.y,a=t.z,n=this.x,r=this.y,l=this.z,h=this.w,o=h*s+r*a-l*u,v=h*u+l*s-n*a,y=h*a+n*u-r*s,c=-n*s-r*u-l*a;return e.x=o*h+c*-n+v*-l-y*-r,e.y=v*h+c*-r+y*-n-o*-l,e.z=y*h+c*-l+o*-r-v*-n,e},t.prototype.toMat3=function(t){void 0===t&&(t=null),t||(t=new u.default);var e=this.x,s=this.y,i=this.z,a=this.w,n=e+e,r=s+s,l=i+i,h=e*n,o=e*r,v=e*l,y=s*r,c=s*l,f=i*l,p=a*n,d=a*r,x=a*l;return t.init([1-(y+f),o+x,v-d,o-x,1-(h+f),c+p,v+d,c-p,1-(h+y)]),t},t.prototype.toMat4=function(t){void 0===t&&(t=null),t||(t=new a.default);var e=this.x,s=this.y,i=this.z,u=this.w,n=e+e,r=s+s,l=i+i,h=e*n,o=e*r,v=e*l,y=s*r,c=s*l,f=i*l,p=u*n,d=u*r,x=u*l;return t.init([1-(y+f),o+x,v-d,0,o-x,1-(h+f),c+p,0,v+d,c-p,1-(h+y),0,0,0,0,1]),t},t.sum=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x+s.x,i.y=e.y+s.y,i.z=e.z+s.z,i.w=e.w+s.w,i},t.product=function(e,s,i){void 0===i&&(i=null),i||(i=new t);var u=e.x,a=e.y,n=e.z,r=e.w,l=s.x,h=s.y,o=s.z,v=s.w;return i.x=u*v+r*l+a*o-n*h,i.y=a*v+r*h+n*l-u*o,i.z=n*v+r*o+u*h-a*l,i.w=r*v-u*l-a*h-n*o,i},t.cross=function(e,s,i){void 0===i&&(i=null),i||(i=new t);var u=e.x,a=e.y,n=e.z,r=e.w,l=s.x,h=s.y,o=s.z,v=s.w;return i.x=r*o+n*v+u*h-a*l,i.y=r*v-u*l-a*h-n*o,i.z=r*l+u*v+a*o-n*h,i.w=r*h+a*v+n*l-u*o,i},t.shortMix=function(e,s,i,u){if(void 0===u&&(u=null),u||(u=new t),i<=0)return u.xyzw=e.xyzw,u;if(i>=1)return u.xyzw=s.xyzw,u;var a,n,r=t.dot(e,s),l=s.copy();if(r<0&&(l.inverse(),r=-r),r>.9999)a=1-i,n=0+i;else{var h=Math.sqrt(1-r*r),o=Math.atan2(h,r),v=1/h;a=Math.sin((1-i)*o)*v,n=Math.sin((0+i)*o)*v}return u.x=a*e.x+n*l.x,u.y=a*e.y+n*l.y,u.z=a*e.z+n*l.z,u.w=a*e.w+n*l.w,u},t.mix=function(e,s,i,u){void 0===u&&(u=null),u||(u=new t);var a=e.x*s.x+e.y*s.y+e.z*s.z+e.w*s.w;if(Math.abs(a)>=1)return u.xyzw=e.xyzw,u;var n=Math.acos(a),r=Math.sqrt(1-a*a);if(Math.abs(r)<.001)return u.x=.5*e.x+.5*s.x,u.y=.5*e.y+.5*s.y,u.z=.5*e.z+.5*s.z,u.w=.5*e.w+.5*s.w,u;var l=Math.sin((1-i)*n)/r,h=Math.sin(i*n)/r;return u.x=e.x*l+s.x*h,u.y=e.y*l+s.y*h,u.z=e.z*l+s.z*h,u.w=e.w*l+s.w*h,u},t.fromAxis=function(e,s,i){void 0===i&&(i=null),i||(i=new t),s*=.5;var u=Math.sin(s);return i.x=e.x*u,i.y=e.y*u,i.z=e.z*u,i.w=Math.cos(s),i},t.identity=(new t).setIdentity(),t}();e.default=r},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(2),u=s(1),a=s(5),n=s(3),r=s(0),l=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(9),t&&this.init(t)}return t.prototype.at=function(t){return this.values[t]},t.prototype.init=function(t){for(var e=0;e<9;e++)this.values[e]=t[e];return this},t.prototype.reset=function(){for(var t=0;t<9;t++)this.values[t]=0},t.prototype.copy=function(e){void 0===e&&(e=null),e||(e=new t);for(var s=0;s<9;s++)e.values[s]=this.values[s];return e},t.prototype.all=function(){for(var t=[],e=0;e<9;e++)t[e]=this.values[e];return t},t.prototype.row=function(t){return[this.values[3*t+0],this.values[3*t+1],this.values[3*t+2]]},t.prototype.col=function(t){return[this.values[t],this.values[t+3],this.values[t+6]]},t.prototype.equals=function(t,e){void 0===e&&(e=r.epsilon);for(var s=0;s<9;s++)if(Math.abs(this.values[s]-t.at(s))>e)return!1;return!0},t.prototype.determinant=function(){var t=this.values[0],e=this.values[1],s=this.values[2],i=this.values[3],u=this.values[4],a=this.values[5],n=this.values[6],r=this.values[7],l=this.values[8];return t*(l*u-a*r)+e*(-l*i+a*n)+s*(r*i-u*n)},t.prototype.setIdentity=function(){return this.values[0]=1,this.values[1]=0,this.values[2]=0,this.values[3]=0,this.values[4]=1,this.values[5]=0,this.values[6]=0,this.values[7]=0,this.values[8]=1,this},t.prototype.transpose=function(){var t=this.values[1],e=this.values[2],s=this.values[5];return this.values[1]=this.values[3],this.values[2]=this.values[6],this.values[3]=t,this.values[5]=this.values[7],this.values[6]=e,this.values[7]=s,this},t.prototype.inverse=function(){var t=this.values[0],e=this.values[1],s=this.values[2],i=this.values[3],u=this.values[4],a=this.values[5],n=this.values[6],r=this.values[7],l=this.values[8],h=l*u-a*r,o=-l*i+a*n,v=r*i-u*n,y=t*h+e*o+s*v;return y?(y=1/y,this.values[0]=h*y,this.values[1]=(-l*e+s*r)*y,this.values[2]=(a*e-s*u)*y,this.values[3]=o*y,this.values[4]=(l*t-s*n)*y,this.values[5]=(-a*t+s*i)*y,this.values[6]=v*y,this.values[7]=(-r*t+e*n)*y,this.values[8]=(u*t-e*i)*y,this):null},t.prototype.multiply=function(t){var e=this.values[0],s=this.values[1],i=this.values[2],u=this.values[3],a=this.values[4],n=this.values[5],r=this.values[6],l=this.values[7],h=this.values[8],o=t.at(0),v=t.at(1),y=t.at(2),c=t.at(3),f=t.at(4),p=t.at(5),d=t.at(6),x=t.at(7),z=t.at(8);return this.values[0]=o*e+v*u+y*r,this.values[1]=o*s+v*a+y*l,this.values[2]=o*i+v*n+y*h,this.values[3]=c*e+f*u+p*r,this.values[4]=c*s+f*a+p*l,this.values[5]=c*i+f*n+p*h,this.values[6]=d*e+x*u+z*r,this.values[7]=d*s+x*a+z*l,this.values[8]=d*i+x*n+z*h,this},t.prototype.multiplyVec2=function(t,e){void 0===e&&(e=null);var s=t.x,u=t.y;return e?(e.xy=[s*this.values[0]+u*this.values[3]+this.values[6],s*this.values[1]+u*this.values[4]+this.values[7]],e):new i.default([s*this.values[0]+u*this.values[3]+this.values[6],s*this.values[1]+u*this.values[4]+this.values[7]])},t.prototype.multiplyVec3=function(t,e){void 0===e&&(e=null);var s=t.x,i=t.y,a=t.z;return e?(e.xyz=[s*this.values[0]+i*this.values[3]+a*this.values[6],s*this.values[1]+i*this.values[4]+a*this.values[7],s*this.values[2]+i*this.values[5]+a*this.values[8]],e):new u.default([s*this.values[0]+i*this.values[3]+a*this.values[6],s*this.values[1]+i*this.values[4]+a*this.values[7],s*this.values[2]+i*this.values[5]+a*this.values[8]])},t.prototype.toMat4=function(t){return void 0===t&&(t=null),t?(t.init([this.values[0],this.values[1],this.values[2],0,this.values[3],this.values[4],this.values[5],0,this.values[6],this.values[7],this.values[8],0,0,0,0,1]),t):new a.default([this.values[0],this.values[1],this.values[2],0,this.values[3],this.values[4],this.values[5],0,this.values[6],this.values[7],this.values[8],0,0,0,0,1])},t.prototype.toQuat=function(){var t=this.values[0],e=this.values[1],s=this.values[2],i=this.values[3],u=this.values[4],a=this.values[5],r=this.values[6],l=this.values[7],h=this.values[8],o=t-u-h,v=u-t-h,y=h-t-u,c=0,f=t+u+h;o>f&&(f=o,c=1),v>f&&(f=v,c=2),y>f&&(f=y,c=3);var p=.5*Math.sqrt(f+1),d=.25/p,x=new n.default;switch(c){case 0:x.w=p,x.x=(a-l)*d,x.y=(r-s)*d,x.z=(e-i)*d;break;case 1:x.w=(a-l)*d,x.x=p,x.y=(e+i)*d,x.z=(r+s)*d;break;case 2:x.w=(r-s)*d,x.x=(e+i)*d,x.y=p,x.z=(a+l)*d;break;case 3:x.w=(e-i)*d,x.x=(r+s)*d,x.y=(a+l)*d,x.z=p}return x},t.prototype.rotate=function(t,e){var s=e.x,i=e.y,u=e.z,a=Math.sqrt(s*s+i*i+u*u);if(!a)return null;1!==a&&(s*=a=1/a,i*=a,u*=a);var n=Math.sin(t),r=Math.cos(t),l=1-r,h=this.values[0],o=this.values[1],v=this.values[2],y=this.values[4],c=this.values[5],f=this.values[6],p=this.values[8],d=this.values[9],x=this.values[10],z=s*s*l+r,w=i*s*l+u*n,b=u*s*l-i*n,g=s*i*l-u*n,m=i*i*l+r,M=u*i*l+s*n,j=s*u*l+i*n,O=i*u*l-s*n,P=u*u*l+r;return this.values[0]=h*z+y*w+p*b,this.values[1]=o*z+c*w+d*b,this.values[2]=v*z+f*w+x*b,this.values[3]=h*g+y*m+p*M,this.values[4]=o*g+c*m+d*M,this.values[5]=v*g+f*m+x*M,this.values[6]=h*j+y*O+p*P,this.values[7]=o*j+c*O+d*P,this.values[8]=v*j+f*O+x*P,this},t.product=function(e,s,i){void 0===i&&(i=null);var u=e.at(0),a=e.at(1),n=e.at(2),r=e.at(3),l=e.at(4),h=e.at(5),o=e.at(6),v=e.at(7),y=e.at(8),c=s.at(0),f=s.at(1),p=s.at(2),d=s.at(3),x=s.at(4),z=s.at(5),w=s.at(6),b=s.at(7),g=s.at(8);return i?(i.init([c*u+f*r+p*o,c*a+f*l+p*v,c*n+f*h+p*y,d*u+x*r+z*o,d*a+x*l+z*v,d*n+x*h+z*y,w*u+b*r+g*o,w*a+b*l+g*v,w*n+b*h+g*y]),i):new t([c*u+f*r+p*o,c*a+f*l+p*v,c*n+f*h+p*y,d*u+x*r+z*o,d*a+x*l+z*v,d*n+x*h+z*y,w*u+b*r+g*o,w*a+b*l+g*v,w*n+b*h+g*y])},t.identity=(new t).setIdentity(),t}();e.default=l},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(1),u=s(6),a=s(4),n=s(0),r=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(16),t&&this.init(t)}return t.prototype.at=function(t){return this.values[t]},t.prototype.init=function(t){for(var e=0;e<16;e++)this.values[e]=t[e];return this},t.prototype.reset=function(){for(var t=0;t<16;t++)this.values[t]=0},t.prototype.copy=function(e){void 0===e&&(e=null),e||(e=new t);for(var s=0;s<16;s++)e.values[s]=this.values[s];return e},t.prototype.all=function(){for(var t=[],e=0;e<16;e++)t[e]=this.values[e];return t},t.prototype.row=function(t){return[this.values[4*t+0],this.values[4*t+1],this.values[4*t+2],this.values[4*t+3]]},t.prototype.col=function(t){return[this.values[t],this.values[t+4],this.values[t+8],this.values[t+12]]},t.prototype.equals=function(t,e){void 0===e&&(e=n.epsilon);for(var s=0;s<16;s++)if(Math.abs(this.values[s]-t.at(s))>e)return!1;return!0},t.prototype.determinant=function(){var t=this.values[0],e=this.values[1],s=this.values[2],i=this.values[3],u=this.values[4],a=this.values[5],n=this.values[6],r=this.values[7],l=this.values[8],h=this.values[9],o=this.values[10],v=this.values[11],y=this.values[12],c=this.values[13],f=this.values[14],p=this.values[15];return(t*a-e*u)*(o*p-v*f)-(t*n-s*u)*(h*p-v*c)+(t*r-i*u)*(h*f-o*c)+(e*n-s*a)*(l*p-v*y)-(e*r-i*a)*(l*f-o*y)+(s*r-i*n)*(l*c-h*y)},t.prototype.setIdentity=function(){return this.values[0]=1,this.values[1]=0,this.values[2]=0,this.values[3]=0,this.values[4]=0,this.values[5]=1,this.values[6]=0,this.values[7]=0,this.values[8]=0,this.values[9]=0,this.values[10]=1,this.values[11]=0,this.values[12]=0,this.values[13]=0,this.values[14]=0,this.values[15]=1,this},t.prototype.transpose=function(){var t=this.values[1],e=this.values[2],s=this.values[3],i=this.values[6],u=this.values[7],a=this.values[11];return this.values[1]=this.values[4],this.values[2]=this.values[8],this.values[3]=this.values[12],this.values[4]=t,this.values[6]=this.values[9],this.values[7]=this.values[13],this.values[8]=e,this.values[9]=i,this.values[11]=this.values[14],this.values[12]=s,this.values[13]=u,this.values[14]=a,this},t.prototype.inverse=function(){var t=this.values[0],e=this.values[1],s=this.values[2],i=this.values[3],u=this.values[4],a=this.values[5],n=this.values[6],r=this.values[7],l=this.values[8],h=this.values[9],o=this.values[10],v=this.values[11],y=this.values[12],c=this.values[13],f=this.values[14],p=this.values[15],d=t*a-e*u,x=t*n-s*u,z=t*r-i*u,w=e*n-s*a,b=e*r-i*a,g=s*r-i*n,m=l*c-h*y,M=l*f-o*y,j=l*p-v*y,O=h*f-o*c,P=h*p-v*c,q=o*p-v*f,_=d*q-x*P+z*O+w*j-b*M+g*m;return _?(_=1/_,this.values[0]=(a*q-n*P+r*O)*_,this.values[1]=(-e*q+s*P-i*O)*_,this.values[2]=(c*g-f*b+p*w)*_,this.values[3]=(-h*g+o*b-v*w)*_,this.values[4]=(-u*q+n*j-r*M)*_,this.values[5]=(t*q-s*j+i*M)*_,this.values[6]=(-y*g+f*z-p*x)*_,this.values[7]=(l*g-o*z+v*x)*_,this.values[8]=(u*P-a*j+r*m)*_,this.values[9]=(-t*P+e*j-i*m)*_,this.values[10]=(y*b-c*z+p*d)*_,this.values[11]=(-l*b+h*z-v*d)*_,this.values[12]=(-u*O+a*M-n*m)*_,this.values[13]=(t*O-e*M+s*m)*_,this.values[14]=(-y*w+c*x-f*d)*_,this.values[15]=(l*w-h*x+o*d)*_,this):null},t.prototype.multiply=function(t){var e=this.values[0],s=this.values[1],i=this.values[2],u=this.values[3],a=this.values[4],n=this.values[5],r=this.values[6],l=this.values[7],h=this.values[8],o=this.values[9],v=this.values[10],y=this.values[11],c=this.values[12],f=this.values[13],p=this.values[14],d=this.values[15],x=t.at(0),z=t.at(1),w=t.at(2),b=t.at(3);return this.values[0]=x*e+z*a+w*h+b*c,this.values[1]=x*s+z*n+w*o+b*f,this.values[2]=x*i+z*r+w*v+b*p,this.values[3]=x*u+z*l+w*y+b*d,x=t.at(4),z=t.at(5),w=t.at(6),b=t.at(7),this.values[4]=x*e+z*a+w*h+b*c,this.values[5]=x*s+z*n+w*o+b*f,this.values[6]=x*i+z*r+w*v+b*p,this.values[7]=x*u+z*l+w*y+b*d,x=t.at(8),z=t.at(9),w=t.at(10),b=t.at(11),this.values[8]=x*e+z*a+w*h+b*c,this.values[9]=x*s+z*n+w*o+b*f,this.values[10]=x*i+z*r+w*v+b*p,this.values[11]=x*u+z*l+w*y+b*d,x=t.at(12),z=t.at(13),w=t.at(14),b=t.at(15),this.values[12]=x*e+z*a+w*h+b*c,this.values[13]=x*s+z*n+w*o+b*f,this.values[14]=x*i+z*r+w*v+b*p,this.values[15]=x*u+z*l+w*y+b*d,this},t.prototype.multiplyVec3=function(t){var e=t.x,s=t.y,u=t.z;return new i.default([this.values[0]*e+this.values[4]*s+this.values[8]*u+this.values[12],this.values[1]*e+this.values[5]*s+this.values[9]*u+this.values[13],this.values[2]*e+this.values[6]*s+this.values[10]*u+this.values[14]])},t.prototype.multiplyVec4=function(t,e){void 0===e&&(e=null),e||(e=new u.default);var s=t.x,i=t.y,a=t.z,n=t.w;return e.x=this.values[0]*s+this.values[4]*i+this.values[8]*a+this.values[12]*n,e.y=this.values[1]*s+this.values[5]*i+this.values[9]*a+this.values[13]*n,e.z=this.values[2]*s+this.values[6]*i+this.values[10]*a+this.values[14]*n,e.w=this.values[3]*s+this.values[7]*i+this.values[11]*a+this.values[15]*n,e},t.prototype.toMat3=function(){return new a.default([this.values[0],this.values[1],this.values[2],this.values[4],this.values[5],this.values[6],this.values[8],this.values[9],this.values[10]])},t.prototype.toInverseMat3=function(){var t=this.values[0],e=this.values[1],s=this.values[2],i=this.values[4],u=this.values[5],n=this.values[6],r=this.values[8],l=this.values[9],h=this.values[10],o=h*u-n*l,v=-h*i+n*r,y=l*i-u*r,c=t*o+e*v+s*y;return c?(c=1/c,new a.default([o*c,(-h*e+s*l)*c,(n*e-s*u)*c,v*c,(h*t-s*r)*c,(-n*t+s*i)*c,y*c,(-l*t+e*r)*c,(u*t-e*i)*c])):null},t.prototype.translate=function(t){var e=t.x,s=t.y,i=t.z;return this.values[12]+=this.values[0]*e+this.values[4]*s+this.values[8]*i,this.values[13]+=this.values[1]*e+this.values[5]*s+this.values[9]*i,this.values[14]+=this.values[2]*e+this.values[6]*s+this.values[10]*i,this.values[15]+=this.values[3]*e+this.values[7]*s+this.values[11]*i,this},t.prototype.scale=function(t){var e=t.x,s=t.y,i=t.z;return this.values[0]*=e,this.values[1]*=e,this.values[2]*=e,this.values[3]*=e,this.values[4]*=s,this.values[5]*=s,this.values[6]*=s,this.values[7]*=s,this.values[8]*=i,this.values[9]*=i,this.values[10]*=i,this.values[11]*=i,this},t.prototype.rotate=function(t,e){var s=e.x,i=e.y,u=e.z,a=Math.sqrt(s*s+i*i+u*u);if(!a)return null;1!==a&&(s*=a=1/a,i*=a,u*=a);var n=Math.sin(t),r=Math.cos(t),l=1-r,h=this.values[0],o=this.values[1],v=this.values[2],y=this.values[3],c=this.values[4],f=this.values[5],p=this.values[6],d=this.values[7],x=this.values[8],z=this.values[9],w=this.values[10],b=this.values[11],g=s*s*l+r,m=i*s*l+u*n,M=u*s*l-i*n,j=s*i*l-u*n,O=i*i*l+r,P=u*i*l+s*n,q=s*u*l+i*n,_=i*u*l-s*n,V=u*u*l+r;return this.values[0]=h*g+c*m+x*M,this.values[1]=o*g+f*m+z*M,this.values[2]=v*g+p*m+w*M,this.values[3]=y*g+d*m+b*M,this.values[4]=h*j+c*O+x*P,this.values[5]=o*j+f*O+z*P,this.values[6]=v*j+p*O+w*P,this.values[7]=y*j+d*O+b*P,this.values[8]=h*q+c*_+x*V,this.values[9]=o*q+f*_+z*V,this.values[10]=v*q+p*_+w*V,this.values[11]=y*q+d*_+b*V,this},t.frustum=function(e,s,i,u,a,n){var r=s-e,l=u-i,h=n-a;return new t([2*a/r,0,0,0,0,2*a/l,0,0,(s+e)/r,(u+i)/l,-(n+a)/h,-1,0,0,-n*a*2/h,0])},t.perspective=function(e,s,i,u){var a=i*Math.tan(e*Math.PI/360),n=a*s;return t.frustum(-n,n,-a,a,i,u)},t.orthographic=function(e,s,i,u,a,n){var r=s-e,l=u-i,h=n-a;return new t([2/r,0,0,0,0,2/l,0,0,0,0,-2/h,0,-(e+s)/r,-(u+i)/l,-(n+a)/h,1])},t.lookAt=function(e,s,u){if(void 0===u&&(u=i.default.up),e.equals(s))return this.identity;var a=i.default.difference(e,s).normalize(),n=i.default.cross(u,a).normalize(),r=i.default.cross(a,n).normalize();return new t([n.x,r.x,a.x,0,n.y,r.y,a.y,0,n.z,r.z,a.z,0,-i.default.dot(n,e),-i.default.dot(r,e),-i.default.dot(a,e),1])},t.product=function(e,s,i){void 0===i&&(i=null);var u=e.at(0),a=e.at(1),n=e.at(2),r=e.at(3),l=e.at(4),h=e.at(5),o=e.at(6),v=e.at(7),y=e.at(8),c=e.at(9),f=e.at(10),p=e.at(11),d=e.at(12),x=e.at(13),z=e.at(14),w=e.at(15),b=s.at(0),g=s.at(1),m=s.at(2),M=s.at(3),j=s.at(4),O=s.at(5),P=s.at(6),q=s.at(7),_=s.at(8),V=s.at(9),I=s.at(10),A=s.at(11),F=s.at(12),L=s.at(13),S=s.at(14),k=s.at(15);return i?(i.init([b*u+g*l+m*y+M*d,b*a+g*h+m*c+M*x,b*n+g*o+m*f+M*z,b*r+g*v+m*p+M*w,j*u+O*l+P*y+q*d,j*a+O*h+P*c+q*x,j*n+O*o+P*f+q*z,j*r+O*v+P*p+q*w,_*u+V*l+I*y+A*d,_*a+V*h+I*c+A*x,_*n+V*o+I*f+A*z,_*r+V*v+I*p+A*w,F*u+L*l+S*y+k*d,F*a+L*h+S*c+k*x,F*n+L*o+S*f+k*z,F*r+L*v+S*p+k*w]),i):new t([b*u+g*l+m*y+M*d,b*a+g*h+m*c+M*x,b*n+g*o+m*f+M*z,b*r+g*v+m*p+M*w,j*u+O*l+P*y+q*d,j*a+O*h+P*c+q*x,j*n+O*o+P*f+q*z,j*r+O*v+P*p+q*w,_*u+V*l+I*y+A*d,_*a+V*h+I*c+A*x,_*n+V*o+I*f+A*z,_*r+V*v+I*p+A*w,F*u+L*l+S*y+k*d,F*a+L*h+S*c+k*x,F*n+L*o+S*f+k*z,F*r+L*v+S*p+k*w])},t.identity=(new t).setIdentity(),t}();e.default=r},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(0),u=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(4),t&&(this.xyzw=t)}return Object.defineProperty(t.prototype,"x",{get:function(){return this.values[0]},set:function(t){this.values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this.values[1]},set:function(t){this.values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this.values[2]},set:function(t){this.values[2]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"w",{get:function(){return this.values[3]},set:function(t){this.values[3]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xy",{get:function(){return[this.values[0],this.values[1]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xyz",{get:function(){return[this.values[0],this.values[1],this.values[2]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"xyzw",{get:function(){return[this.values[0],this.values[1],this.values[2],this.values[3]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2],this.values[3]=t[3]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"r",{get:function(){return this.values[0]},set:function(t){this.values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"g",{get:function(){return this.values[1]},set:function(t){this.values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"b",{get:function(){return this.values[2]},set:function(t){this.values[2]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"a",{get:function(){return this.values[3]},set:function(t){this.values[3]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rg",{get:function(){return[this.values[0],this.values[1]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rgb",{get:function(){return[this.values[0],this.values[1],this.values[2]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rgba",{get:function(){return[this.values[0],this.values[1],this.values[2],this.values[3]]},set:function(t){this.values[0]=t[0],this.values[1]=t[1],this.values[2]=t[2],this.values[3]=t[3]},enumerable:!0,configurable:!0}),t.prototype.at=function(t){return this.values[t]},t.prototype.reset=function(){this.x=0,this.y=0,this.z=0,this.w=0},t.prototype.copy=function(e){return void 0===e&&(e=null),e||(e=new t),e.x=this.x,e.y=this.y,e.z=this.z,e.w=this.w,e},t.prototype.negate=function(t){return void 0===t&&(t=null),t||(t=this),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=-this.w,t},t.prototype.equals=function(t,e){return void 0===e&&(e=i.epsilon),!(Math.abs(this.x-t.x)>e)&&(!(Math.abs(this.y-t.y)>e)&&(!(Math.abs(this.z-t.z)>e)&&!(Math.abs(this.w-t.w)>e)))},t.prototype.length=function(){return Math.sqrt(this.squaredLength())},t.prototype.squaredLength=function(){var t=this.x,e=this.y,s=this.z,i=this.w;return t*t+e*e+s*s+i*i},t.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this},t.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this},t.prototype.multiply=function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this},t.prototype.divide=function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this},t.prototype.scale=function(t,e){return void 0===e&&(e=null),e||(e=this),e.x*=t,e.y*=t,e.z*=t,e.w*=t,e},t.prototype.normalize=function(t){void 0===t&&(t=null),t||(t=this);var e=this.length();return 1===e?this:0===e?(t.x*=0,t.y*=0,t.z*=0,t.w*=0,t):(e=1/e,t.x*=e,t.y*=e,t.z*=e,t.w*=e,t)},t.prototype.multiplyMat4=function(t,e){return void 0===e&&(e=null),e||(e=this),t.multiplyVec4(this,e)},t.mix=function(e,s,i,u){return void 0===u&&(u=null),u||(u=new t),u.x=e.x+i*(s.x-e.x),u.y=e.y+i*(s.y-e.y),u.z=e.z+i*(s.z-e.z),u.w=e.w+i*(s.w-e.w),u},t.sum=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x+s.x,i.y=e.y+s.y,i.z=e.z+s.z,i.w=e.w+s.w,i},t.difference=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x-s.x,i.y=e.y-s.y,i.z=e.z-s.z,i.w=e.w-s.w,i},t.product=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x*s.x,i.y=e.y*s.y,i.z=e.z*s.z,i.w=e.w*s.w,i},t.quotient=function(e,s,i){return void 0===i&&(i=null),i||(i=new t),i.x=e.x/s.x,i.y=e.y/s.y,i.z=e.z/s.z,i.w=e.w/s.w,i},t.zero=new t([0,0,0,1]),t}();e.default=u},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(2),u=s(1),a=s(6),n=s(8),r=s(4),l=s(5),h=s(3);e.default={vec2:i.default,vec3:u.default,vec4:a.default,mat2:n.default,mat3:r.default,mat4:l.default,quat:h.default}},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s(2),u=s(0),a=function(){function t(t){void 0===t&&(t=null),this.values=new Float32Array(4),t&&this.init(t)}return t.prototype.at=function(t){return this.values[t]},t.prototype.init=function(t){for(var e=0;e<4;e++)this.values[e]=t[e];return this},t.prototype.reset=function(){for(var t=0;t<4;t++)this.values[t]=0},t.prototype.copy=function(e){void 0===e&&(e=null),e||(e=new t);for(var s=0;s<4;s++)e.values[s]=this.values[s];return e},t.prototype.all=function(){for(var t=[],e=0;e<4;e++)t[e]=this.values[e];return t},t.prototype.row=function(t){return[this.values[2*t+0],this.values[2*t+1]]},t.prototype.col=function(t){return[this.values[t],this.values[t+2]]},t.prototype.equals=function(t,e){void 0===e&&(e=u.epsilon);for(var s=0;s<4;s++)if(Math.abs(this.values[s]-t.at(s))>e)return!1;return!0},t.prototype.determinant=function(){return this.values[0]*this.values[3]-this.values[2]*this.values[1]},t.prototype.setIdentity=function(){return this.values[0]=1,this.values[1]=0,this.values[2]=0,this.values[3]=1,this},t.prototype.transpose=function(){var t=this.values[1];return this.values[1]=this.values[2],this.values[2]=t,this},t.prototype.inverse=function(){var t=this.determinant();if(!t)return null;t=1/t;var e=this.values[0];return this.values[0]=t*this.values[3],this.values[1]=t*-this.values[1],this.values[2]=t*-this.values[2],this.values[3]=t*e,this},t.prototype.multiply=function(t){var e=this.values[0],s=this.values[1],i=this.values[2],u=this.values[3];return this.values[0]=e*t.at(0)+s*t.at(2),this.values[1]=e*t.at(1)+s*t.at(3),this.values[2]=i*t.at(0)+u*t.at(2),this.values[3]=i*t.at(1)+u*t.at(3),this},t.prototype.rotate=function(t){var e=this.values[0],s=this.values[1],i=this.values[2],u=this.values[3],a=Math.sin(t),n=Math.cos(t);return this.values[0]=e*n+s*a,this.values[1]=e*-a+s*n,this.values[2]=i*n+u*a,this.values[3]=i*-a+u*n,this},t.prototype.multiplyVec2=function(t,e){void 0===e&&(e=null);var s=t.x,u=t.y;return e?(e.xy=[s*this.values[0]+u*this.values[1],s*this.values[2]+u*this.values[3]],e):new i.default([s*this.values[0]+u*this.values[1],s*this.values[2]+u*this.values[3]])},t.prototype.scale=function(t){var e=this.values[0],s=this.values[1],i=this.values[2],u=this.values[3],a=t.x,n=t.y;return this.values[0]=e*a,this.values[1]=s*n,this.values[2]=i*a,this.values[3]=u*n,this},t.product=function(e,s,i){void 0===i&&(i=null);var u=e.at(0),a=e.at(1),n=e.at(2),r=e.at(3);return i?(i.init([u*s.at(0)+a*s.at(2),u*s.at(1)+a*s.at(3),n*s.at(0)+r*s.at(2),n*s.at(1)+r*s.at(3)]),i):new t([u*s.at(0)+a*s.at(2),u*s.at(1)+a*s.at(3),n*s.at(0)+r*s.at(2),n*s.at(1)+r*s.at(3)])},t.identity=(new t).setIdentity(),t}();e.default=a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,